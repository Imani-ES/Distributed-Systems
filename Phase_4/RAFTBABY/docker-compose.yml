# This is a sample docker-compose file, Please follow the naming convention for the service and container name, all node
# names must begin with "Node" followed by their sequence number. For a three node cluster your service/container names
# should be Node1, Node2 and Node3 as shown below(for service names they will be lowercase). You can add additional
# parameters and configurations as required by your implementation.


version: "3.7"
services:
    node1:
      container_name: Node1
      build: Node/.
      environment:
        - Port=5555
        - app_name=Node1
        - group=224.1.1.1
        - tor1=5
        - tor2=10
        - heartrate=.25
        - client_host=220.1.1.1
        - client_port=5000

    node2:
      container_name: Node2
      build: Node/.
      environment:
        - Port=5555
        - app_name=Node2
        - group=224.1.1.1
        - tor1=5
        - tor2=10
        - heartrate=.25
        - client_host=220.1.1.1
        - client_port=5000

    node3:
      container_name: Node3
      build: Node/.
      environment:
        - Port=5555
        - app_name=Node3
        - group=224.1.1.1
        - tor1=5
        - tor2=10
        - heartrate=.25
        - client_host=220.1.1.1
        - client_port=5000

    node4:
      container_name: Node4
      build: Node/.
      environment:
        - Port=5555
        - app_name=Node4
        - group=224.1.1.1
        - tor1=5
        - tor2=10
        - heartrate=.25
        - client_host=220.1.1.1
        - client_port=5000

    node5:
      container_name: Node5
      build: Node/.
      environment:
        - Port=5555
        - app_name=Node5
        - group=224.1.1.1
        - tor1=5
        - tor2=10
        - heartrate=.25
        - client_host=220.1.1.1
        - client_port=5000

    controller:
      container_name: Controller
      build: Controller/.
      environment:
        - Port=5555
        - app_name=Controller
        - group=224.1.1.1
      stdin_open: true
      depends_on:
        node1:
          condition:  service_started
        node2:
          condition:  service_started
        node3:
          condition:  service_started
        node4:
          condition:  service_started
        node5:
          condition:  service_started



# Logs stored as [term, key, Value]
# use node_info




