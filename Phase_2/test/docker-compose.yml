version: '3.3'
services:
  
  node_1:
    image: getting-started
    container_name: Node_1_t
    networks:
        - rainbow_bridge
    build: 
      context: .
    ports:
      - '3000:3000'
      - '8080:8080'
    environment:
      - Port=3000
      - db_name=test
      - app_name=Node_1_t
      #- lead=yes
      - host=Node_1_t
      - rainbow_bridge=8080
      - DB_connect=mongodb://root:rootpwd@mongodb_1t:27017
      - DB_connect_2=mongodb://root:rootpwd@mongodb_2t:27017
      - DB_connect_3=mongodb://root:rootpwd@mongodb_3t:27017
    depends_on:
      mongodb_1t:  
        condition:  service_started
      mongodb_2t:
        condition:  service_started
      mongodb_3t:
        condition:  service_started


  mongodb_1t:
      image: mongo
      container_name: mongodb_1t
      restart: unless-stopped
      networks:
        - rainbow_bridge
      environment:
        MONGO_INITDB_DATABASE: test
        MONGO_INITDB_ROOT_USERNAME: root
        MONGO_INITDB_ROOT_PASSWORD: rootpwd
      volumes:
        - /data/mongo_1
      ports:
        - '27017:27017'
  
  mongo_2:
      image: mongo:latest
      #command: mongod --port: 27027
      container_name: mongodb_2t
      restart: unless-stopped
      networks:
        - rainbow_bridge
      environment:
        MONGO_INITDB_DATABASE: test
        MONGO_INITDB_ROOT_USERNAME: root
        MONGO_INITDB_ROOT_PASSWORD: rootpwd
      volumes:
        - /data/mongo_2
      ports:
        - '27027:27017'

  mongo_3:
      image: mongo:latest
      #command: mongod --port: 27037
      container_name: mongodb_3t
      restart: unless-stopped
      networks:
        - rainbow_bridge
      environment:
        MONGO_INITDB_DATABASE: test
        MONGO_INITDB_ROOT_USERNAME: root
        MONGO_INITDB_ROOT_PASSWORD: rootpwd
      volumes:
        - /data/mongo_3
      ports:
        - '27037:27017'
networks:
#rainbow bridge is the network between nodes
    rainbow_bridge:
      name: rainbow_bridge
      driver: bridge